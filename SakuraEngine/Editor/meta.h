//A header file genereate by Sakura J2H tool
//Contains the infomation of a module of Sakura Engine
//With the MIT License Copyright!
#pragma once
#include <tuple>
#include <cstddef>

inline static const char sp_meta[] = {
0x7b, 0xa, 0x9, 0x22, 0x61, 0x70, 0x69, 0x22, 0x3a, 0x20, 0x22, 0x30, 
0x2e, 0x31, 0x2e, 0x30, 0x22, 0x2c, 0xa, 0x9, 0x22, 0x6e, 0x61, 0x6d, 
0x65, 0x22, 0x3a, 0x20, 0x22, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x4d, 
0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x2c, 0xa, 0x9, 0x22, 0x70, 0x72, 
0x65, 0x74, 0x74, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 
0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 
0x22, 0x2c, 0xa, 0x9, 0x22, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 
0x22, 0x3a, 0x20, 0x22, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x22, 0x2c, 0xa, 
0x9, 0x22, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x3a, 0x20, 
0x22, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x22, 0x2c, 0xa, 0x20, 0x20, 
0x20, 0x20, 0x22, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 
0x69, 0x65, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x20, 0xa, 0x20, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x22, 0x6e, 
0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x6f, 
0x64, 0x75, 0x6c, 0x65, 0x22, 0x2c, 0x20, 0x22, 0x76, 0x65, 0x72, 0x73, 
0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x22, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x22, 
0x7d, 0x2c, 0xa, 0x9, 0x9, 0x9, 0x9, 0x9, 0x9, 0x7b, 0x22, 0x6e, 
0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 
0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 
0x2c, 0x20, 0x22, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 
0x22, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x22, 0x7d, 0x2c, 0xa, 0x9, 0x9, 
0x9, 0x9, 0x9, 0x9, 0x7b, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 
0x22, 0x43, 0x47, 0x44, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x2c, 
0x20, 0x22, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x22, 
0x31, 0x2e, 0x30, 0x2e, 0x30, 0x22, 0x7d, 0xa, 0x20, 0x20, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x5d, 0x2c, 0xa, 0x9, 0x22, 0x61, 0x75, 0x74, 
0x68, 0x6f, 0x72, 0x22, 0x3a, 0x20, 0x22, 0x22, 0x2c, 0xa, 0x9, 0x22, 
0x75, 0x72, 0x6c, 0x22, 0x3a, 0x20, 0x22, 0x22, 0x2c, 0xa, 0x9, 0x22, 
0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x22, 
0x2c, 0xa, 0x9, 0x22, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 
0x74, 0x22, 0x3a, 0x20, 0x22, 0x22, 0xa, 0x7d
};

inline static const std::size_t sp_meta_size = 392;

inline static std::size_t __GetMetaSize(void)
{
    return sp_meta_size;
}
inline static const char* __GetMetaData(void)
{
    return sp_meta;
}
public:
virtual const char* GetMetaData(void) override
{return __GetMetaData();}
public:
virtual std::size_t GetMetaSize(void) override
{return __GetMetaSize();}
